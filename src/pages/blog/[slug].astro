---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { formatLongDate } from '../../utils/dateUtils';
import { getReadingTime } from '../../utils/readingTime';

// Generate static paths
export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  return blogPosts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const readingTime = getReadingTime(post.body);

// Get related posts (same tag, excluding current post)
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(p => 
    p.slug !== post.slug && 
    p.data.tags.some(tag => post.data.tags.includes(tag))
  )
  .sort(() => Math.random() - 0.5) // Randomize
  .slice(0, 3); // Get up to 3 related posts
---

<Layout title={`${post.data.title} | The Daily Chronicle`} description={post.data.excerpt} ogImage={post.data.image}>
  <article class="max-w-3xl mx-auto">
    <header class="mb-8">
      <h1 class="font-serif text-4xl md:text-5xl font-bold mb-4">{post.data.title}</h1>
      <div class="flex items-center justify-between text-ink-light mb-6">
        <div>
          <span class="font-serif">By {post.data.author}</span>
          <span class="mx-2">â€¢</span>
          <time datetime={post.data.date.toISOString()}>{formatLongDate(post.data.date)}</time>
        </div>
        <span class="font-mono">{readingTime} min read</span>
      </div>
      <img 
        src={post.data.image} 
        alt={post.data.title}
        class="w-full h-auto mb-6"
        width="800"
        height="450"
      />
    </header>
    
    <div class="prose prose-lg max-w-none prose-headings:font-serif prose-headings:font-bold prose-p:font-serif">
      <Content />
    </div>
    
    <footer class="mt-12 pt-8 border-t border-gray-300">
      <div class="flex flex-wrap gap-2 mb-6">
        {post.data.tags.map(tag => (
          <a href={`/blog/tag/${tag}`} class="inline-block px-3 py-1 border border-ink-light text-ink-light hover:bg-ink hover:text-paper transition-colors">
            {tag}
          </a>
        ))}
      </div>
      
      {relatedPosts.length > 0 && (
        <div class="mt-12">
          <h3 class="font-serif text-xl font-bold mb-6">Related Articles</h3>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            {relatedPosts.map(relatedPost => (
              <a href={`/blog/${relatedPost.slug}`} class="group">
                <div class="overflow-hidden mb-2">
                  <img 
                    src={relatedPost.data.image} 
                    alt={relatedPost.data.title}
                    class="w-full h-40 object-cover grayscale transition-all duration-500 group-hover:grayscale-0 group-hover:scale-105"
                    width="300"
                    height="160"
                  />
                </div>
                <h4 class="font-serif font-bold text-lg mb-1 group-hover:underline">{relatedPost.data.title}</h4>
                <p class="text-sm text-ink-light">{formatLongDate(relatedPost.data.date)}</p>
              </a>
            ))}
          </div>
        </div>
      )}
    </footer>
  </article>
</Layout>

<script>
  import { animate } from 'motion';
  
  // Animate content on page load
  window.addEventListener('DOMContentLoaded', () => {
    animate('article header', 
      { opacity: [0, 1], y: [20, 0] },
      { duration: 0.6, easing: [0.25, 0.1, 0.25, 1] }
    );
    
    animate('.prose > *', 
      { opacity: [0, 1], y: [20, 0] },
      { delay: 0.3, duration: 0.8, easing: [0.25, 0.1, 0.25, 1] }
    );
  });
</script>